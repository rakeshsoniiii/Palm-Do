import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import { useToast } from '../../contexts_ToastContext_jsx';
import API from '../../utils_api_js';
import TransactionItem from '../../components_dashboard_TransactionItem_jsx';
import Header from '../../components_layout_Header_jsx';
import Button from '../../components_common_Button_jsx';
import { ArrowLeft } from 'lucide-react';

const Transactions = () => {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [page, setPage] = useState(1);
  const [hasMore, setHasMore] = useState(true);
  const navigate = useNavigate();
  const { addToast } = useToast();
  const user = JSON.parse(localStorage.getItem('user'));

  useEffect(() => {
    const loadTransactions = async () => {
      try {
        const { data } = await API.get(`/transactions?page=${page}&limit=10`);
        setTransactions(prev => [...prev, ...data.transactions]);
        setHasMore(data.transactions.length === 10);
      } catch (error) {
        addToast('Failed to load transactions', 'error');
        console.error(error);
      } finally {
        setLoading(false);
      }
    };

    loadTransactions();
  }, [page]);

  const loadMore = () => {
    setPage(prev => prev + 1);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header user={user} onLogout={() => {
        localStorage.removeItem('user');
        navigate('/login');
      }} />

      <div className="container mx-auto px-4 py-6">
        <div className="flex items-center mb-6">
          <Button
            variant="ghost"
            size="small"
            onClick={() => navigate('/dashboard')}
            icon={ArrowLeft}
            className="mr-2"
          >
            Back
          </Button>
          <h1 className="text-2xl font-bold text-gray-900">Transaction History</h1>
        </div>

        {loading && transactions.length === 0 ? (
          <div className="flex justify-center py-12">
            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-600"></div>
          </div>
        ) : (
          <>
            <motion.ul 
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className="divide-y bg-white rounded-lg shadow overflow-hidden"
            >
              {transactions.map((transaction, index) => (
                <TransactionItem 
                  key={`${transaction.transactionId}-${index}`} 
                  transaction={transaction} 
                />
              ))}
            </motion.ul>

            {hasMore && (
              <div className="mt-4 flex justify-center">
                <Button
                  onClick={loadMore}
                  loading={loading}
                  disabled={loading}
                  className="px-6"
                >
                  {loading ? 'Loading...' : 'Load More'}
                </Button>
              </div>
            )}
          </>
        )}
      </div>
    </div>
  );
};

export default Transactions;
